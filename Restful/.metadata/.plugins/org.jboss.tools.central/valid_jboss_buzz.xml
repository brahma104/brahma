<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Podman: Managing pods and containers in a local container runtime</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/SZB7t9TN_Oc/" /><category term="Containers" /><category term="Developer Tools" /><category term="Kubernetes" /><category term="Red Hat Enterprise Linux" /><category term="containers" /><category term="kubernetes" /><category term="Podman" /><category term="pods" /><author><name>Brent Baude</name></author><id>https://developers.redhat.com/blog/?p=553577</id><updated>2019-01-15T13:00:36Z</updated><published>2019-01-15T13:00:36Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;People associate running pods with &lt;/span&gt;&lt;a href="https://kubernetes.io/"&gt;&lt;span style="font-weight: 400;"&gt;Kubernetes&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. And when they run containers in their development runtimes, they do not even think about the role pods could play—even in a localized runtime.  Most people coming from the Docker world of running single containers do not envision the concept of running pods. There are several good reasons to consider using pods locally, other than using pods to naturally group your containers.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;For example, suppose you have multiple containers that require the use of a MariaDB container.  But you would prefer to not bind that database to a routable network; either in your bridge or further.  Using a pod, you could bind to the &lt;code&gt;localhost&lt;/code&gt; address of the pod and all containers in that pod will be able to connect to it because of the shared network name space.&lt;/span&gt;&lt;span id="more-553577"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Podman Pods: what you need to know&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The &lt;/span&gt;&lt;a href="https://kubernetes.io/docs/concepts/workloads/pods/pod/"&gt;&lt;span style="font-weight: 400;"&gt;Pod&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; concept was introduced by &lt;/span&gt;&lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;&lt;span style="font-weight: 400;"&gt;Kubernetes&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;.  Podman pods are similar to the Kubernetes &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;definition. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/podman-pod-architecture.png"&gt;&lt;img class=" aligncenter wp-image-554097 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/podman-pod-architecture.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/podman-pod-architecture.png" alt="Podman architecture: containers in a pod" width="859" height="518" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/podman-pod-architecture.png 859w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/podman-pod-architecture-300x181.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/podman-pod-architecture-768x463.png 768w" sizes="(max-width: 859px) 100vw, 859px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Every Podman pod includes an &amp;#8220;infra&amp;#8221; container.   This container does nothing, but go to sleep. Its purpose is to hold the namespaces associated with the pod and allow podman to connect other containers to the pod.  This allows you to start and stop containers within the POD and the pod will stay running, where as if the primary container controlled the pod, this would not be possible. The default infra container is based on the &lt;code&gt;k8s.gcr.io/pause&lt;/code&gt; image,  Unless you explicitly say otherwise, all pods will have container based on the default image. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Most of the attributes that make up the Pod are actually assigned to the &amp;#8220;infra&amp;#8221; container.  Port bindings, cgroup-parent values, and kernel namespaces are all assigned to the “infra” container. This is critical to understand, because once the pod is created these attributes are assigned to the &amp;#8220;infra&amp;#8221; container and cannot be changed. For example, if you create a pod and then later decide you want to add a container that binds new ports, Podman will not be able to do this.  You would need to recreate the pod with the additional port bindings before adding the new container.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In the above diagram, notice the box above each container, conmon, this is the container monitor.  It is a small C Program that’s job is to watch the primary process of the container, and if the container dies, save the exit code.  It also holds open the tty of the container, so that it can be attached to later. This is what allows podman to run in detached mode (backgrounded), so podman can exit but conmon continues to run.  Each container has its own instance of conmon.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;The CLI: podman pod&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;We expose most of the interaction with pods through the &lt;code&gt;podman pod&lt;/code&gt; commands.  Among other actions, you can use &lt;code&gt;podman pod&lt;/code&gt; to create, delete, query, and inspect pods.  You can see all the pod related commands by running &lt;code&gt;podman pod&lt;/code&gt; without any arguments.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman pod&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;NAME:&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   podman pod - Manage container pods.&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Pods are a group of one or more containers sharing the same network, pid and ipc namespaces.&lt;/span&gt; &lt;span style="font-weight: 400;"&gt; USAGE:&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   podman pod command [command options] [arguments...]&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;COMMANDS:&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;create    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Create a new empty pod&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;exists    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Check if a pod exists in local storage&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;inspect   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;displays a pod configuration&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;kill      &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Send the specified signal or SIGKILL to containers in pod&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;pause     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Pause one or more pods&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;ps, ls, list  List pods&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;restart   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Restart one or more pods&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;rm        &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Remove one or more pods&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;start     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Start one or more pods&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;stats     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Display percentage of CPU, memory, network I/O, block I/O and PIDs for containers in one or more pods&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;stop      &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Stop one or more pods&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;top       &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Display the running processes of containers in a pod&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;unpause   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Unpause one or more pods&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;OPTIONS:&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   --help, -h  show help&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Create a pod&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The traditional way to create a pod with Podman is using the &lt;code&gt;podman pod create&lt;/code&gt; command.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman pod create --help&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;NAME:&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   podman pod create - Create a new empty pod&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;USAGE:&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   podman pod create [command options] [arguments...]&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;DESCRIPTION:&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   Creates a new empty pod. The pod ID is then printed to stdout. You can then start it at any time with the podman pod start &amp;#60;pod_id&amp;#62; command. The pod will be created with the initial state 'created'.&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;OPTIONS:&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   --cgroup-parent value  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Set parent cgroup for the pod&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   --infra                &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Create an infra container associated with the pod to share namespaces with&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   --infra-command value  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;The command to run on the infra container when the pod is started (default: "/pause")&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   --infra-image value    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;The image of the infra container to associate with the pod (default: "k8s.gcr.io/pause:3.1")&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   --label value, -l value&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Set metadata on pod (default [])&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   --label-file value     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Read in a line delimited file of labels (default [])&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   --name value, -n value &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Assign a name to the pod&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   --pod-id-file value    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Write the pod ID to the file&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   --publish value, -p value  Publish a container's port, or a range of ports, to the host (default [])&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;   --share value          &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;A comma delimited list of kernel namespaces the pod will share (default: "cgroup,ipc,net,uts")&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In its most basic context, you can simply issue &lt;code&gt;podman pod create&lt;/code&gt; and Podman will create a pod without extra attributes.  A random name will also be assigned to the pod.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman pod create&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;9e0a57248aedc453e7b466d73ef769c99e35d265d97f6fa287442083246f3762&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;We can list the pods using the &lt;code&gt;podman pod list&lt;/code&gt; command:&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman pod list&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;POD ID     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;NAME         &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;CREATED     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;# OF CONTAINERS   INFRA ID&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;9e0a57248aed   youthful_jones  Running 5 seconds ago   1 &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;6074ffd22b93&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Note that the container has a single container in it.  The container is the &amp;#8220;infra&amp;#8221; command. We can further observe this using the &lt;code&gt;podman ps&lt;/code&gt; command by passing the command line switch *&amp;#8211;pod*.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman ps -a --pod&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;CONTAINER ID  IMAGE    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;COMMAND  CREATED  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS    &lt;/span&gt; &lt;span style="font-weight: 400;"&gt;PORTS  NAMES         &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;POD&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;6074ffd22b93  k8s.gcr.io/pause:3.1  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;3 minutes ago  Up 3 minutes ago     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;9e0a57248aed-infra  9e0a57248aed&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Here we can see that the pod ID from &lt;code&gt;podman ps&lt;/code&gt; matches the pod id in &lt;code&gt;podman pod list&lt;/code&gt;.  And the container image is the same as the default &amp;#8220;infra&amp;#8221; container image.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Add a container to a pod&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;You can add a container to a pod using the *&amp;#8211;pod* option in the &lt;code&gt;podman create&lt;/code&gt; and &lt;code&gt;podman run&lt;/code&gt; commands.  For example, here we add a container running **top** to the newly created *youthful_jones* pod. Notice the use of *&amp;#8211;pod*.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman run -dt --pod youthful_jones docker.io/library/alpine:latest top&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;0f62e6dcdfdbf3921a7d73353582fa56a545502c89f0dfcb8736ce7be61c9271&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;And now two containers exist in our pod.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman pod ps&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;POD ID     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;NAME         &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;CREATED     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;# OF CONTAINERS   INFRA ID&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;9e0a57248aed   youthful_jones  Running 7 minutes ago   2 &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;6074ffd22b93&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Looking at the list of containers, we also see each container and their respective pod assignment.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman ps -a --pod&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;CONTAINER ID  IMAGE               &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;COMMAND  CREATED   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS         &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;PORTS  NAMES          &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;POD&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;0f62e6dcdfdb  docker.io/library/alpine:latest  top &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;14 seconds ago  Up 14 seconds ago     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;awesome_archimedes  9e0a57248aed&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;6074ffd22b93  k8s.gcr.io/pause:3.1                  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;7 minutes ago   Up 7 minutes ago      &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;9e0a57248aed-infra  9e0a57248aed&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Shortcut to create pods&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;We recently added the ability to create pods via the &lt;code&gt;podman run&lt;/code&gt;&lt;/span&gt; and &lt;code&gt;podman create&lt;/code&gt; commands. One upside to creating a pod with this approach is that the normal port bindings declared for the container will be assigned automatically to the &amp;#8220;infra&amp;#8221; container. However, if you need to specify more granular options for pod creation like kernel namespaces or different &amp;#8220;infra&amp;#8221; container image usage, you still need to create the pod manually as was first described. Nevertheless, for relatively basic pod creations, the shortcut is handy. As this feature was recent added, it isn&amp;#8217;t available in the version of Podman included with Red Hat Enterprise Linux 7.6 and 8 Beta.&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;To create a new pod with your new container, you simply pass *&amp;#8211;pod*: &lt;code&gt;new:&amp;#60;name&amp;#62;&lt;/code&gt;.  The use of **new:** indicates to Podman that you want to create a new pod rather than attempt to assign the container to an existing pod.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;To create a nginx container within a pod and expose port 80 from the container to port 32597 on the host, you would:&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman run -dt --pod new:nginx -p 32597:80 quay.io/libpod/alpine_nginx:latest&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;ac8839fc7dead8e391e7983ad8d0c27ce311d190b0a8eb72dcde535de272d537&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ curl http://localhost:32597&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;podman rulez&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;And here is what it looks like when listing containers:&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman ps -ap&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;CONTAINER ID  IMAGE                  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;COMMAND           &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;CREATED    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS        &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;PORTS              &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;NAMES           &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;POD&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;ac8839fc7dea  quay.io/libpod/alpine_nginx:latest  nginx -g daemon o... 4 minutes ago Up 4 minutes ago                     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;happy_cray      &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;3e4cad88f8c2&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;c2f7c5651275  k8s.gcr.io/pause:3.1                                  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;4 minutes ago Up 4 minutes ago  0.0.0.0:32597-&amp;#62;80/tcp  3e4cad88f8c2-infra 3e4cad88f8c2&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;MariaDB example&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The following asciinema demo shows how to create a pod via the shortcut method.  The container being run is a MariaDB container image and I bind only to its 127.0.0.1 address.  This means only containers in the same pod will able to access it. I then run an alpine container, install the MariaDB-client package, connect to the database itself, and show defined databases.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://asciinema.org/a/Xc818xXZ7TAlP9yvHU88IPVBK"&gt;&lt;img class="alignnone" src="https://asciinema.org/a/Xc818xXZ7TAlP9yvHU88IPVBK.svg" alt="" width="945" height="568" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Pods and container management&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In Podman, the status of the pod and its containers can be exclusive to each other meaning that containers within pods can be restarted, stopped, and started without impacting the status of the pod.  Suppose we have a pod called &lt;code&gt;demodb&lt;/code&gt; and it contains two containers (and an “infra” container) running a MariaDB and a nginx session.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman pod ps&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;POD ID     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;NAME &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;CREATED         &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;# OF CONTAINERS   INFRA ID&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;fa7924a5196c   demodb Running   About a minute ago  3 &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;3005ed8491d0&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ sudo podman ps -p&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;CONTAINER ID  IMAGE                   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;COMMAND           &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;CREATED    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS        &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;PORTS  NAMES        &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;POD&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;02e37a3b9873  quay.io/libpod/alpine_nginx:latest   nginx -g daemon o... 4 minutes ago Up 4 minutes ago     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;optimistic_edison  fa7924a5196c&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;2597454063f8  quay.io/baude/mariadbpoddemo:latest  docker-entrypoint... 4 minutes ago Up 4 minutes ago     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;eloquent_golick&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;fa7924a5196c&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;If we wanted to stop and start the nginx container, the status of the MariaDB container and the pod itself will remain unchanged.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman stop optimistic_edison&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;02e37a3b987300e9124b61820119ae425c5e496b907800ecaf1194a3f50e5dcc&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;With the nginx container stopped, we can still observe the &lt;code&gt;demopod&lt;/code&gt; is running and the MariaDB container remains unchanged.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman pod ps&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;POD ID     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;NAME &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;CREATED     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;# OF CONTAINERS   INFRA ID&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;fa7924a5196c   demodb Running   5 minutes ago 3           &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;3005ed8491d0&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ sudo podman ps -p&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;CONTAINER ID  IMAGE                   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;COMMAND           &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;   C&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;REATED    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS        &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;PORTS  NAMES       &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;POD&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;2597454063f8  quay.io/baude/mariadbpoddemo:latest  docker-entrypoint... 5 minutes ago Up 5 minutes ago     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;eloquent_golick  fa7924a5196c&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;And we can start the nginx container to restore the pod back to its original state.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman start optimistic_edison&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;optimistic_edison&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ sudo podman ps -p&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;CONTAINER ID  IMAGE                   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;COMMAND           &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;CREATED    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS        &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;PORTS  NAMES        &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;POD&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;02e37a3b9873  quay.io/libpod/alpine_nginx:latest   nginx -g daemon o... 8 minutes ago Up 6 seconds ago     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;optimistic_edison  fa7924a5196c&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;2597454063f8  quay.io/baude/mariadbpoddemo:latest  docker-entrypoint... 8 minutes ago Up 8 minutes ago     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;eloquent_golick&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;fa7924a5196c&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;We can also stop the pod and all of its containers using the &lt;code&gt;podman pod stop&lt;/code&gt; command.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman pod stop demodb&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;fa7924a5196cb403298ad2ce24f0db30a3790e80729c7704ef5fdc27302f7ad0&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ sudo podman ps -ap&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;CONTAINER ID  IMAGE                   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;COMMAND           &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;CREATED     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS                 &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;PORTS                &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;NAMES           &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;POD&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;02e37a3b9873  quay.io/libpod/alpine_nginx:latest   nginx -g daemon o... 10 minutes ago Exited (0) 21 seconds ago                       &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;optimistic_edison   fa7924a5196c&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;2597454063f8  quay.io/baude/mariadbpoddemo:latest  docker-entrypoint... 10 minutes ago Exited (0) 19 seconds ago                       &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;eloquent_golick &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;fa7924a5196c&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;3005ed8491d0  k8s.gcr.io/pause:3.1                                   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;10 minutes ago Exited (0) 19 seconds ago  0.0.0.0:43871-&amp;#62;3306/tcp fa7924a5196c-infra  fa7924a5196c&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;And if we look at the status of the pod, it will show a state of “Exited”.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman pod ps&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;POD ID     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;NAME &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS   CREATED    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;# OF CONTAINERS   INFRA ID&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;fa7924a5196c   demodb Exited   13 minutes ago 3           &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;3005ed8491d0&lt;/span&gt;&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Likewise, we can also start the pod and all of its containers back up.  After which, all the containers in the pod should be running and the pod should show a status of “Running”.&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;$ sudo podman pod start demodb&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;fa7924a5196cb403298ad2ce24f0db30a3790e80729c7704ef5fdc27302f7ad0&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ sudo podman ps -p&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;CONTAINER ID  IMAGE                   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;COMMAND           &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;CREATED     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;   &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS        &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;PORTS  NAMES         &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;POD&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;02e37a3b9873  quay.io/libpod/alpine_nginx:latest   nginx -g daemon o... 14 minutes ago Up 5 seconds ago     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;optimistic_edison  fa7924a5196c&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;2597454063f8  quay.io/baude/mariadbpoddemo:latest  docker-entrypoint... 14 minutes ago Up 4 seconds ago     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;eloquent_golick&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;fa7924a5196c&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ sudo podman pod ps&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;POD ID     &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;NAME &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;STATUS&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;CREATED      &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;  &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;# OF CONTAINERS  INFRA ID&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;fa7924a5196c   demodb Running   14 minutes ago 3            &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;3005ed8491d0&lt;/span&gt; &lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;There is also a &lt;code&gt;podman pod restart&lt;/code&gt; command that will restart all the containers within a Pod.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Wrap up&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The ability for Podman to handle pod deployment is a clear differentiator to other container runtimes.  As a libpod maintainer, I am still realizing the advantages of having pods even in a localized runtime. There will most certainly be more development in Podman around pods as we learn how users exploit the use of them.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;For more information on Podman, make sure you visit the &lt;/span&gt;&lt;a href="https://github.com/containers/libpod"&gt;&lt;span style="font-weight: 400;"&gt;libpod project page&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; on github. Relevant blogs and news related to Podman can also be found at &lt;/span&gt;&lt;a href="https://podman.io/"&gt;&lt;span style="font-weight: 400;"&gt;podman.io&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Podman is included with Red Hat Enterprise Linux 7.6 as well as Red Hat Enterprise Linux 8 beta.&lt;/p&gt; &lt;h2&gt;More about Podman on the Red Hat Developer Blog&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/20/buildah-podman-containers-without-daemons/"&gt;Containers without daemons: Podman and Buildah available in RHEL 7.6 and RHEL 8 Beta&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/articles/podman-next-generation-linux-container-tools/"&gt;Podman &amp;#8211; The next generation of Linux container tools&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/08/29/intro-to-podman/"&gt;Intro to Podman (New in Red Hat Enterprise Linux 7.6)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/29/managing-containerized-system-services-with-podman/"&gt;Managing containerized system services with Podman&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F15%2Fpodman-managing-containers-pods%2F&amp;#38;linkname=Podman%3A%20Managing%20pods%20and%20containers%20in%20a%20local%20container%20runtime" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F15%2Fpodman-managing-containers-pods%2F&amp;#38;linkname=Podman%3A%20Managing%20pods%20and%20containers%20in%20a%20local%20container%20runtime" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F15%2Fpodman-managing-containers-pods%2F&amp;#38;linkname=Podman%3A%20Managing%20pods%20and%20containers%20in%20a%20local%20container%20runtime" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F15%2Fpodman-managing-containers-pods%2F&amp;#38;linkname=Podman%3A%20Managing%20pods%20and%20containers%20in%20a%20local%20container%20runtime" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F15%2Fpodman-managing-containers-pods%2F&amp;#38;linkname=Podman%3A%20Managing%20pods%20and%20containers%20in%20a%20local%20container%20runtime" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F15%2Fpodman-managing-containers-pods%2F&amp;#38;linkname=Podman%3A%20Managing%20pods%20and%20containers%20in%20a%20local%20container%20runtime" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F15%2Fpodman-managing-containers-pods%2F&amp;#38;linkname=Podman%3A%20Managing%20pods%20and%20containers%20in%20a%20local%20container%20runtime" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F15%2Fpodman-managing-containers-pods%2F&amp;#38;linkname=Podman%3A%20Managing%20pods%20and%20containers%20in%20a%20local%20container%20runtime" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F15%2Fpodman-managing-containers-pods%2F&amp;#038;title=Podman%3A%20Managing%20pods%20and%20containers%20in%20a%20local%20container%20runtime" data-a2a-url="https://developers.redhat.com/blog/2019/01/15/podman-managing-containers-pods/" data-a2a-title="Podman: Managing pods and containers in a local container runtime"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/15/podman-managing-containers-pods/"&gt;Podman: Managing pods and containers in a local container runtime&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/SZB7t9TN_Oc" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;People associate running pods with Kubernetes. And when they run containers in their development runtimes, they do not even think about the role pods could play—even in a localized runtime.  Most people coming from the Docker world of running single containers do not envision the concept of running pods. There are several good reasons to [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/15/podman-managing-containers-pods/"&gt;Podman: Managing pods and containers in a local container runtime&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/01/15/podman-managing-containers-pods/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">553577</post-id><dc:creator>Brent Baude</dc:creator><dc:date>2019-01-15T13:00:36Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/15/podman-managing-containers-pods/</feedburner:origLink></entry><entry><title>Infinispan Spring Boot Starter 2.1.2.Final is out!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/y0iEd3NHMSM/infinispan-spring-boot-starter-212final.html" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="infinispan" scheme="searchisko:content:tags" /><category term="minor release" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><category term="Spring" scheme="searchisko:content:tags" /><category term="spring-boot" scheme="searchisko:content:tags" /><category term="spring-boot starters" scheme="searchisko:content:tags" /><author><name>Katia Aresti</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_spring_boot_starter_2_1_2_final_is_out</id><updated>2019-01-15T09:52:09Z</updated><published>2019-01-15T09:52:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Dear Infinispan and Spring Boot users,&lt;br /&gt;&lt;br /&gt;We have just released &lt;a href="https://github.com/infinispan/infinispan-spring-boot" target="_blank"&gt;Infinispan Spring Boot&lt;/a&gt;&amp;nbsp;&lt;b&gt;2.1.2.Final&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;2.1.2.Final&lt;/b&gt; is using&amp;nbsp;&lt;b&gt;Spring Boot 2.1.2.RELEASE&lt;/b&gt;&amp;nbsp;and contains some bug fixes related to JCache and Actuator integration.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;The starter is now using Infinispan's&amp;nbsp;last stable release: &lt;b&gt;9.4.5.Final&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;You can find this release in the maven central repository.&lt;br /&gt;&lt;br /&gt;Please report any issues in our&amp;nbsp;&lt;a href="https://issues.jboss.org/projects/ISPN"&gt;issue tracker&lt;/a&gt;&amp;nbsp;and join the conversation in our&amp;nbsp;&lt;a href="https://infinispan.zulipchat.com/"&gt;Zulip Chat&lt;/a&gt;&amp;nbsp;to shape up our next release.&lt;br /&gt;&lt;br /&gt;Enjoy,&lt;br /&gt;&lt;br /&gt;The Infinispan Team&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/p38HKNZbYw8" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/y0iEd3NHMSM" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispan and Spring Boot users, We have just released Infinispan Spring Boot 2.1.2.Final. 2.1.2.Final is using Spring Boot 2.1.2.RELEASE and contains some bug fixes related to JCache and Actuator integration. The starter is now using Infinispan's last stable release: 9.4.5.Final. You can find this release in the maven central repository. Please report any issues in our issue tracker and joi...</summary><dc:creator>Katia Aresti</dc:creator><dc:date>2019-01-15T09:52:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/p38HKNZbYw8/infinispan-spring-boot-starter-212final.html</feedburner:origLink></entry><entry><title>The new National French PHR (Dossier Médical Partagé) – How does it work? - Part 1</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zXplwW4m3lw/the-new-national-french-phr-dossier.html" /><category term="feed_group_name_jbossascommunity" scheme="searchisko:content:tags" /><category term="feed_name_cxf_tips" scheme="searchisko:content:tags" /><author><name>fandry</name></author><id>searchisko:content:id:jbossorg_blog-the_new_national_french_phr_dossier_m_dical_partag_how_does_it_work_part_1</id><updated>2019-01-15T11:33:53Z</updated><published>2019-01-14T20:01:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-1SFMw1yd_8Y/XDy1fb2GnLI/AAAAAAAADc8/DeO2zCyv7ygAsvkAsLFKGAKEY36xloqdACLcBGAs/s1600/Header_DMP.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="332" data-original-width="555" src="https://4.bp.blogspot.com/-1SFMw1yd_8Y/XDy1fb2GnLI/AAAAAAAADc8/DeO2zCyv7ygAsvkAsLFKGAKEY36xloqdACLcBGAs/s1600/Header_DMP.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt;"&gt;Since &lt;/span&gt;&lt;a href="https://www.ameli.fr/paris/assure/actualites/dossier-medical-partage-dmp-la-memoire-de-votre-sante" style="font-family: calibri, sans-serif; font-size: 11pt;"&gt;November 2018&lt;/a&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt;"&gt;, each &lt;/span&gt;&lt;a href="http://www.leparisien.fr/societe/sante/la-ministre-invite-tous-les-francais-a-se-doter-d-un-carnet-de-sante-numerique-05-11-2018-7936035.php" style="font-family: calibri, sans-serif; font-size: 11pt;"&gt;French patient&lt;/a&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt;"&gt; can have access to a new national &lt;/span&gt;&lt;strong style="font-family: calibri, sans-serif; font-size: 11pt;"&gt;Patient Health Record&lt;/strong&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt;"&gt; (PHR) called in French the &lt;/span&gt;&lt;a href="https://www.dmp.fr/" style="font-family: calibri, sans-serif; font-size: 11pt;"&gt;Dossier Médical Partagé or DMP&lt;/a&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt;"&gt; (shared medical file).&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;strong&gt;How does it work from an end-user perspective&lt;/strong&gt;? In this post, I describe my &lt;strong&gt;first experience&lt;/strong&gt; with this new healthcare application - with all security and privacy precautions related my protected health information (PHI).&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;span style="font-family: &amp;quot;times new roman&amp;quot;; font-size: small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;I have seen several large scale initiatives starting (e.g. &lt;a href="https://www.healthvault.com/en-us/blog/"&gt;Microsoft HealthVault&lt;/a&gt;, &lt;a href="http://fandry.blogspot.com/2009/04/himss-2009-how-consumers-user-phrs-kp.html"&gt;KP&lt;/a&gt;/&lt;a href="https://healthy.kaiserpermanente.org/health/care/consumer/my-health-manager"&gt;MyHealth Manager&lt;/a&gt;) with some initiatives including &lt;a href="https://www.informationweek.com/healthcare/electronic-health-records/5-reasons-why-google-health-failed/d/d-id/1098623"&gt;GoogleHealth&lt;/a&gt; who &lt;a href="http://fandry.blogspot.com/2008/09/abcs-of-google-health-data-api.html"&gt;was abandoned&lt;/a&gt; for some time and was reborn in another form&lt;span style="mso-spacerun: yes;"&gt;&amp;nbsp; &lt;/span&gt;as &lt;a href="https://www.blog.google/products/google-cloud/google-cloud-healthcare-new-apis-customers-partners-and-security-updates/"&gt;Google Cloud for Healthcare&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;I have been working in the medical data integration and processing field for many years now and even &lt;a href="https://patents.justia.com/patent/20180358115"&gt;share a patent&lt;/a&gt; in this domain. By experience, I know that the most difficult part is not to design and create a scalable and secure structured medical repository, but to make sure that it is supplied with&lt;strong&gt; up-to-date&lt;/strong&gt; and &lt;strong&gt;relevant data&lt;/strong&gt;. I have a good knowledge of HL7, IHE profiles and other data integration standards and I recognize the&lt;strong&gt; complexity of acquiring&lt;/strong&gt; and &lt;strong&gt;reconcile medical data &lt;/strong&gt;to be used by &lt;strong&gt;healthcare professionals&lt;/strong&gt;. &lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;span style="font-family: &amp;quot;times new roman&amp;quot;; font-size: small;"&gt;&lt;/span&gt; Let’s start with the creation of my DMP. There are several options to create your national PHR/DMP in France. The first one is to ask you pharmacist to create for you, the second is to initiate the creation yourself. This is the path I have chosen. &lt;br /&gt;&lt;br /&gt;From the main DMP web site creation page&amp;nbsp;&amp;nbsp;&lt;a href="https://www.dmp.fr/patient/creation/etape1"&gt;https://www.dmp.fr/patient/creation/etape1&lt;/a&gt;, I was able to create my account in few minutes after providing a specific creation code generated by dmp.fr and my social security or &lt;a href="https://en.wikipedia.org/wiki/INSEE_code"&gt;INSEE&amp;nbsp;number&lt;/a&gt;&amp;nbsp;(the main personal ID for patients in France).&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-iqXHoVKBuYQ/XDy1uhbcvFI/AAAAAAAADdA/9bnETmzEnlkdlc5CywR9zjYTQtJLW5hPACLcBGAs/s1600/DMP_Creation1.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="409" data-original-width="637" src="https://3.bp.blogspot.com/-iqXHoVKBuYQ/XDy1uhbcvFI/AAAAAAAADdA/9bnETmzEnlkdlc5CywR9zjYTQtJLW5hPACLcBGAs/s1600/DMP_Creation1.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;times new roman&amp;quot;; font-size: small;"&gt;&lt;/span&gt;I also need to add a 11 digit number that is located on my &lt;a href="https://en.wikipedia.org/wiki/Carte_Vitale"&gt;Carte Vitale&lt;/a&gt;, the &lt;a href="https://en.wikipedia.org/wiki/Health_insurance" title="Health insurance"&gt;health insurance&lt;/a&gt; &lt;a class="mw-redirect" href="https://en.wikipedia.org/wiki/Smartcard" title="Smartcard"&gt;card&lt;/a&gt; of the &lt;a href="https://en.wikipedia.org/wiki/Health_care_in_France" title="Health care in France"&gt;national health care system in France&lt;/a&gt;.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;a href="https://2.bp.blogspot.com/-JZkb90ZW4JM/XDy13f4EjZI/AAAAAAAADdI/_FtH58nwbME7lvDeJReoXUs0tGa2nahkACEwYBhgL/s1600/DMP_Creation1b.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="453" data-original-width="666" src="https://2.bp.blogspot.com/-JZkb90ZW4JM/XDy13f4EjZI/AAAAAAAADdI/_FtH58nwbME7lvDeJReoXUs0tGa2nahkACEwYBhgL/s1600/DMP_Creation1b.png" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;br /&gt;&amp;nbsp; ... some contact info (email and phone):&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;a href="https://3.bp.blogspot.com/-7U9JeiB9P88/XDy2KYc-TjI/AAAAAAAADdU/Exg8HJwutWkicitj8ya50gu34wTuaqABwCLcBGAs/s1600/DMP_Creation2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="340" data-original-width="363" src="https://3.bp.blogspot.com/-7U9JeiB9P88/XDy2KYc-TjI/AAAAAAAADdU/Exg8HJwutWkicitj8ya50gu34wTuaqABwCLcBGAs/s1600/DMP_Creation2.png" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;and very important, consent:&lt;br /&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;/span&gt; &lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;a href="https://3.bp.blogspot.com/-E_hBLzX--iU/XDy2RBkLfVI/AAAAAAAADdY/frV0CY5P4j883l4H8h5f3AQpEqhb4gm6QCLcBGAs/s1600/DMP_Creation3.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="191" data-original-width="663" src="https://3.bp.blogspot.com/-E_hBLzX--iU/XDy2RBkLfVI/AAAAAAAADdY/frV0CY5P4j883l4H8h5f3AQpEqhb4gm6QCLcBGAs/s1600/DMP_Creation3.png" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;and my account is created (credentials have been modified for obvious reasons).&lt;br /&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;/span&gt; &lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;a href="https://2.bp.blogspot.com/-9If2mStNcF4/XDy0_Ch4h0I/AAAAAAAADc0/d_XM14Kho2ECCFlvx6VQ0Mk3WMNWNzvVgCLcBGAs/s1600/DMP_Creation5.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="315" data-original-width="606" src="https://2.bp.blogspot.com/-9If2mStNcF4/XDy0_Ch4h0I/AAAAAAAADc0/d_XM14Kho2ECCFlvx6VQ0Mk3WMNWNzvVgCLcBGAs/s1600/DMP_Creation5.png" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;Additional information is requested (e.g. address etc):&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-WkMEA_WtABI/XDy2mZTexXI/AAAAAAAADdg/YKCYfKmdwdkM5qH6ruOsGaGkZcIyCWlVQCLcBGAs/s1600/DMP_Creation6.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="328" data-original-width="668" src="https://1.bp.blogspot.com/-WkMEA_WtABI/XDy2mZTexXI/AAAAAAAADdg/YKCYfKmdwdkM5qH6ruOsGaGkZcIyCWlVQCLcBGAs/s1600/DMP_Creation6.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;/span&gt; &lt;br /&gt;&lt;br /&gt;Now that my account has been created, I am able to access it using my personal credentials:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;/span&gt; &lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-_mCtH6k9wIc/XDy3iWsdUuI/AAAAAAAADds/-O7ehDa-9zU220kcl2g6A0ngPZsA2LqCgCLcBGAs/s1600/DMP_Access_1.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="405" data-original-width="681" src="https://1.bp.blogspot.com/-_mCtH6k9wIc/XDy3iWsdUuI/AAAAAAAADds/-O7ehDa-9zU220kcl2g6A0ngPZsA2LqCgCLcBGAs/s1600/DMP_Access_1.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;A two factor numeric ID is also sent to my cell phone (or email account) can be requested: &lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-y0CEj1HI0ko/XDy4h40zqDI/AAAAAAAADd4/5Lq1_I5qPBcim34AnyTvLV5q3MXVJvftgCLcBGAs/s1600/DMP_Access_2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="234" data-original-width="672" src="https://1.bp.blogspot.com/-y0CEj1HI0ko/XDy4h40zqDI/AAAAAAAADd4/5Lq1_I5qPBcim34AnyTvLV5q3MXVJvftgCLcBGAs/s1600/DMP_Access_2.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;and used for additional security:&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-YAw6trD3wGk/XDzqGVzzT3I/AAAAAAAADfE/90wSQmen3iAw3T0j8w0oTLHoKrZ40yXEQCLcBGAs/s1600/DMP_Access_3.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="216" data-original-width="696" src="https://4.bp.blogspot.com/-YAw6trD3wGk/XDzqGVzzT3I/AAAAAAAADfE/90wSQmen3iAw3T0j8w0oTLHoKrZ40yXEQCLcBGAs/s1600/DMP_Access_3.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;For the first connection, I have the option to change some of my account settings: &lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-yElHe8KwCcg/XDy-nzQGzpI/AAAAAAAADeQ/0g6kG8-Tkl0MikGTZzpkv0pGeapAJ5aRgCLcBGAs/s1600/DMP_Access_4.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="500" data-original-width="915" src="https://3.bp.blogspot.com/-yElHe8KwCcg/XDy-nzQGzpI/AAAAAAAADeQ/0g6kG8-Tkl0MikGTZzpkv0pGeapAJ5aRgCLcBGAs/s1600/DMP_Access_4.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-R7b0OQ36wYk/XDzBGRBjCHI/AAAAAAAADes/QZ99ib289ws1h5p58ki5gCKib2BSW48qgCLcBGAs/s1600/DMP_Access_5.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="429" data-original-width="696" src="https://3.bp.blogspot.com/-R7b0OQ36wYk/XDzBGRBjCHI/AAAAAAAADes/QZ99ib289ws1h5p58ki5gCKib2BSW48qgCLcBGAs/s1600/DMP_Access_5.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;and some "break-the-glass" type authorization settings: &lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-dGCG2MUx27U/XDzBjU_-bpI/AAAAAAAADe4/9GQPZjBAbAYlhVMW40RffCd-CQ58fXlzgCLcBGAs/s1600/DMP_Access_7.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="228" data-original-width="552" src="https://2.bp.blogspot.com/-dGCG2MUx27U/XDzBjU_-bpI/AAAAAAAADe4/9GQPZjBAbAYlhVMW40RffCd-CQ58fXlzgCLcBGAs/s1600/DMP_Access_7.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;Overall the experience of creating my DMP/PHR account was quite easy and without any particular problem. It was fast and secure. The initial performance of the application seems good, having in mind that this is just the beginning and that only a small number of patients of the French population have a DMP account.&lt;br /&gt;&lt;br /&gt;In my next post, I will explore the functionalities and the type of data that is or could exist in this account.&lt;br /&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: &amp;quot;calibri&amp;quot; , sans-serif; font-size: 11pt; line-height: 107%;"&gt;&lt;br /&gt;&lt;/span&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/TechnologyHighlights/~4/HU1hmjimlK4" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zXplwW4m3lw" height="1" width="1" alt=""/&gt;</content><summary>Since November 2018, each French patient can have access to a new national Patient Health Record (PHR) called in French the Dossier Médical Partagé or DMP (shared medical file). How does it work from an end-user perspective? In this post, I describe my first experience with this new healthcare application - with all security and privacy precautions related my protected health information (PHI). I ...</summary><dc:creator>fandry</dc:creator><dc:date>2019-01-14T20:01:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/TechnologyHighlights/~3/HU1hmjimlK4/the-new-national-french-phr-dossier.html</feedburner:origLink></entry><entry><title>Generate jBPM Business Apps with Node.js Command-line interface (CLI)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/vm31Ox-WIMw/generate-jbpm-business-apps-with-nodejs.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Tihomir Surdilovic</name></author><id>searchisko:content:id:jbossorg_blog-generate_jbpm_business_apps_with_node_js_command_line_interface_cli</id><updated>2019-01-14T16:17:40Z</updated><published>2019-01-14T16:17:00Z</published><content type="html">In addition to &lt;a href="http://start.jbpm.org/"&gt;start.jbpm.org&lt;/a&gt;&amp;nbsp;there is now an command-line way to generate your jBPM Business Applications, namely with the &lt;a href="https://www.npmjs.com/package/jba-cli"&gt;jba-cli Node package&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-R8JtNDqGwHo/XDy0NpOlL-I/AAAAAAAAhuQ/FUGFW5Ly-AM3bEs-UyTIyzqetCV36HMXgCLcBGAs/s1600/Screen%2BShot%2B2019-01-14%2Bat%2B11.06.23%2BAM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="528" data-original-width="1600" height="131" src="https://3.bp.blogspot.com/-R8JtNDqGwHo/XDy0NpOlL-I/AAAAAAAAhuQ/FUGFW5Ly-AM3bEs-UyTIyzqetCV36HMXgCLcBGAs/s400/Screen%2BShot%2B2019-01-14%2Bat%2B11.06.23%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;jba-cli package on&amp;nbsp;npmjs.com&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-DA9hixkTRms/XDy1DS9ihQI/AAAAAAAAhuc/N7Kx7DJ5FV8_uP5xWRAfpxfs0T_W7ysrACLcBGAs/s1600/jbausage.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="823" data-original-width="1600" height="205" src="https://3.bp.blogspot.com/-DA9hixkTRms/XDy1DS9ihQI/AAAAAAAAhuc/N7Kx7DJ5FV8_uP5xWRAfpxfs0T_W7ysrACLcBGAs/s400/jbausage.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Sample CLI usage&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;If you have Node installed locally you can install and run this package with:&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;pre style="background: rgb(247, 247, 247); border-radius: 2px; box-sizing: border-box; color: #333333; font-family: monospace, monospace; font-size: 16px; margin-bottom: 24px; overflow-x: auto; padding: 13px 15px;"&gt;&lt;code style="background-attachment: initial; background-clip: initial; background-image: initial; background-origin: initial; background-position: initial; background-repeat: initial; background-size: initial; border-radius: 2px; box-sizing: border-box; font-family: &amp;quot;Fira Mono&amp;quot;, &amp;quot;Andale Mono&amp;quot;, Consolas, monospace; font-size: 1rem; font-variant-ligatures: none; letter-spacing: 0px; line-height: 24px; padding: 0px;"&gt;npm install jba-cli -g&lt;/code&gt;&lt;/pre&gt;&lt;pre style="background: rgb(247, 247, 247); border-radius: 2px; box-sizing: border-box; color: #333333; font-size: 16px; margin-bottom: 24px; overflow-x: auto; padding: 13px 15px;"&gt;&lt;span style="font-family: Fira Mono, Andale Mono, Consolas, monospace;"&gt;&lt;span style="font-variant-ligatures: none;"&gt;jba gen&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;div&gt;This allows your to build your jBPM Business app zip file without having to go through the browser.&amp;nbsp;&lt;/div&gt;&lt;div&gt;To contribute to this little cool project feel free to clone it and create pull requests from its &lt;a href="https://github.com/BootstrapJBPM/jba-cli"&gt;github repo&lt;/a&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Here is youtube video showing how to install and use the jba-cli command line interface to generate your app:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/_FHWkchCq_o/0.jpg" src="https://www.youtube.com/embed/_FHWkchCq_o?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/vm31Ox-WIMw" height="1" width="1" alt=""/&gt;</content><summary>In addition to start.jbpm.org there is now an command-line way to generate your jBPM Business Applications, namely with the jba-cli Node package. jba-cli package on npmjs.com Sample CLI usage If you have Node installed locally you can install and run this package with: npm install jba-cli -g jba gen This allows your to build your jBPM Business app zip file without having to go through the browser....</summary><dc:creator>Tihomir Surdilovic</dc:creator><dc:date>2019-01-14T16:17:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2019/01/generate-jbpm-business-apps-with-nodejs.html</feedburner:origLink></entry><entry><title>Building a Node.js service using the API-first approach</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/fGQO80V8daI/" /><category term="Microservices" /><category term="Modern App Dev" /><category term="Node.js" /><category term="API-first" /><category term="API-Management" /><category term="express" /><category term="microservices" /><category term="nodejs" /><category term="OpenAPI" /><category term="Typescript" /><author><name>Mikel Sanchez</name></author><id>https://developers.redhat.com/blog/?p=551807</id><updated>2019-01-14T13:00:04Z</updated><published>2019-01-14T13:00:04Z</published><content type="html">&lt;p&gt;Nowadays technology companies are adopting the API as one of the most valuable pieces of their business.&lt;/p&gt; &lt;p&gt;What does it mean when we talk about API-first development? We already know the benefits of using an API-first approach:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Reduced interdependencies&lt;/li&gt; &lt;li&gt;Earlier validation&lt;/li&gt; &lt;li&gt;Early feedback with the freedom to change&lt;/li&gt; &lt;li&gt;Improved efficiency&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This article describes what it means to use the API-first design approach. It also walks through an example of using this approach with the &lt;a href="https://github.com/OAI/OpenAPI-Specification"&gt;OpenAPI Specification&lt;/a&gt; and with &lt;a href="https://github.com/isa-group/oas-tools"&gt;oas-tools&lt;/a&gt; as the &lt;a href="https://developers.redhat.com/blog/category/node-js/"&gt;Node.js&lt;/a&gt; back-end application, which enables you to care only about the business logic. All the validation of incoming requests are done by the &lt;code&gt;oas-tools&lt;/code&gt; library (based on the OpenAPI Specification file provided).&lt;span id="more-551807"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;What does &amp;#8220;API-first approach&amp;#8221; mean?&lt;/h2&gt; &lt;p&gt;With the API-first approach, designing the API is the first priority before writing any code. Design of the API involves thorough thinking and planning through collaboration with different stakeholders. This result in high-level documentation describing the intent of the API.&lt;/p&gt; &lt;p&gt;This API contract acts as a central draft keeping all your team members aligned on what your API’s objectives are and how your API’s resources are exposed. The finalization of the contract allows the team to build the interface of the application.&lt;/p&gt; &lt;p&gt;After this, the cross-functional teams rely on this interface to build the rest of the application independent of each other. For example, the back-end developer starts building out the implementation logic behind the API,  the front-end developer starts working on different front-end applications, and quality testers start writing tests for the exposed interface.&lt;/p&gt; &lt;h2&gt;Choose an API specification&lt;/h2&gt; &lt;p&gt;The first step is to choose an API specification.&lt;em&gt; API specification&lt;/em&gt; is a term that is often used interchangeably with &lt;em&gt;API definition&lt;/em&gt;. While these terms have many similarities, they are different entities.&lt;/p&gt; &lt;p&gt;An API specification provides a broad understanding of how an API behaves and how the API links with other APIs. It explains how the API functions and the results to expect when using the API.&lt;/p&gt; &lt;p&gt;There are several API specification options:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/OAI/OpenAPI-Specification"&gt;OpenAPI Specification&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://raml.org/"&gt;RESTful API Modeling Language (RAML)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://apiblueprint.org/"&gt;API Blueprint&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://graphql.org"&gt;GraphQL&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We need to choose the one that makes our work easier and supports the languages that we are going to use.&lt;/p&gt; &lt;p&gt;For this article, I am going to show how to use the API-first approach using the OpenAPI Specification 3.0.0 and using &lt;code&gt;oas-tools&lt;/code&gt; for our Node.js application.&lt;/p&gt; &lt;h2&gt;Define the API using OpenAPI 3.0&lt;/h2&gt; &lt;p&gt;Before we start coding, we need to create the API that is going to be used by our developers.&lt;/p&gt; &lt;p&gt;This is our final API definition file:&lt;/p&gt; &lt;pre&gt;openapi: 3.0.0 info: title: Hello World API description: This is our Hello World API. version: '1.0' paths: /hello:   post:     x-swagger-router-controller: helloWorldRoute     operationId: helloWorldPost     tags:       - /hello     description: &amp;#62;-       Returns Hello world message.     parameters:       - name: greeting         in: query         description: Name of greeting         required: true         schema:           type: string     responses:       '200':         description: Successful request.         content:           application/json:             schema:               $ref: '#/components/schemas/Hello'       default:         description: Invalid request.         content:           application/json:             schema:               $ref: '#/components/schemas/Error'   get:     x-swagger-router-controller: helloWorldRoute     operationId: helloWorldGet     tags:       - /hello     description: &amp;#62;-       Returns Hello world message     parameters:       - name: greeting         in: query         description: Name of greeting         required: true         schema:           type: string     responses:       '200':         description: Successful request.         content:           application/json:             schema:               $ref: '#/components/schemas/Hello'       default:         description: Invalid request.         content:           application/json:             schema:               $ref: '#/components/schemas/Error' servers: - url: '/api' components: schemas:   Hello:     properties:       msg:         type: string     required:       - msg   Error:     properties:       message:         type: string     required:       - message&lt;/pre&gt; &lt;p&gt;Let&amp;#8217;s decompose it to have a better understanding:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;openapi: 3.0.0&lt;/code&gt; defines the version of the OpenAPI Specification that we are going to use.&lt;/li&gt; &lt;li&gt;&lt;code&gt;info&lt;/code&gt; provides extra information about the API, such as a description, title, and the current version.&lt;/li&gt; &lt;li&gt;&lt;code&gt;servers&lt;/code&gt; provides a list of servers and the base path for the API.&lt;/li&gt; &lt;li&gt;&lt;code&gt;paths&lt;/code&gt;  specifies application endpoints. As you can see, we have one path located at &lt;code&gt;/hello&lt;/code&gt; and then we define two REST operations: &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;post&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Let&amp;#8217;s look at the &lt;code&gt;post&lt;/code&gt; operation:&lt;/p&gt; &lt;p&gt;&lt;code&gt;paths&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;/hello&lt;/code&gt; is the endpoint.&lt;/li&gt; &lt;li&gt;&lt;code&gt;post:&lt;/code&gt; is the operation type.&lt;/li&gt; &lt;li&gt;&lt;code&gt;x-swagger-router-controller: helloWorldRoute&lt;/code&gt;: We will cover it later; annotations for &lt;code&gt;oas-tools&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;operationId: helloWorldPost&lt;/code&gt;: We will cover it later; annotations for &lt;code&gt;oas-tools&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code&gt;tags&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;- /hello&lt;/code&gt;: Used for logical grouping.&lt;/li&gt; &lt;li&gt;&lt;code&gt;description&lt;/code&gt; : Description of the endpoint.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code&gt;parameters&lt;/code&gt;: Parameters required or allowed for the endpoint.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;- name: greeting&lt;/code&gt;: Name of the parameter.&lt;/li&gt; &lt;li&gt;&lt;code&gt;in: query&lt;/code&gt;: Defines where the parameter is located (query, body, etc.)&lt;/li&gt; &lt;li&gt;&lt;code&gt;description: Name of greeting&lt;/code&gt;: Description of the parameter.&lt;/li&gt; &lt;li&gt;&lt;code&gt;required: true&lt;/code&gt;: Specifies whether the parameter is required or optional.&lt;/li&gt; &lt;li&gt;&lt;code&gt;schema&lt;/code&gt;: Type of the parameter (boolean, number, string, etc.)&lt;/li&gt; &lt;li&gt;&lt;code&gt;type:string&lt;/code&gt;: Specifies a string parameter.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code&gt;responses&lt;/code&gt;: What we are expecting as a result of the call.&lt;/p&gt; &lt;ul&gt; &lt;li style="list-style-type: none;"&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;'200'&lt;/code&gt;: Specifies the 200 status response; we can add the ones that we need, for example, 401 if the user is not authorized, etc.&lt;/li&gt; &lt;li&gt;&lt;code&gt;description: Successful request.&lt;/code&gt;: Description of the response.&lt;/li&gt; &lt;li&gt;&lt;code&gt;content:&lt;/code&gt;: Content of the 200 status code response.&lt;/li&gt; &lt;li&gt;&lt;code&gt;application/json:&lt;/code&gt;: Content type returned by 200 status response.&lt;/li&gt; &lt;li&gt;&lt;code&gt;schema:&lt;/code&gt;: Type of object returned.&lt;/li&gt; &lt;li&gt;&lt;code&gt;$ref: '#/components/schemas/Hello'&lt;/code&gt;: Hello object returned, which is composed of the &lt;code&gt;msg&lt;/code&gt; property.&lt;/li&gt; &lt;li&gt;&lt;code&gt;default:&lt;/code&gt;: Default response.&lt;/li&gt; &lt;li&gt;&lt;code&gt;description:&lt;/code&gt;: Description of the default response.&lt;/li&gt; &lt;li&gt;&lt;code&gt;content:&lt;/code&gt;: Content of the default response.&lt;/li&gt; &lt;li&gt;&lt;code&gt;application/json:&lt;/code&gt; : Content type returned by the default response.&lt;/li&gt; &lt;li&gt;&lt;code&gt;schema:&lt;/code&gt;: Type of object returned by the default response.&lt;/li&gt; &lt;li&gt;&lt;code&gt;$ref: '#/components/schemas/Error'&lt;/code&gt;: Error object returned by the default response.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Looking at the specification, we should be able to call it by using the following URL: &lt;code&gt;GET &amp;#60;serverUrl&amp;#62;/api/hello?greeting=redhat&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Now that we have the API definition completed, what can we use to increase our development speed? For the Node.js back-end app, we are going to use &lt;code&gt;oas-tools&lt;/code&gt;.&lt;/p&gt; &lt;h2&gt;Node.js back-end development&lt;/h2&gt; &lt;p&gt;&lt;code&gt;oas-tools&lt;/code&gt; is a Node.js module for managing RESTful APIs defined with OpenAPI specs over &lt;a href="https://expressjs.com/"&gt;Express&lt;/a&gt; servers. Automatically it’s going to check if an incoming request matches our definition, and it will reject it if it doesn’t satisfy our requirements. The result? Less coding time, all the validations are managed by &lt;code&gt;oas-tools&lt;/code&gt;, and we need to care only about the business logic.&lt;/p&gt; &lt;p&gt;I have created a project that has all the required steps and integrations done. Looking into it, we are going to cover the different pieces needed to make it work. You can find the project can at &lt;a href="https://github.com/rhappdev/nodejs-template/tree/openapi3"&gt;github.com/rhappdev/nodejs-template&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;There are two branches:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;master&lt;/code&gt;: Using the OpenAPI 2.x spec&lt;/li&gt; &lt;li&gt;&lt;code&gt;openapi3&lt;/code&gt;: Using the OpenAPI 3.0.0 spec&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We are going to cover OpenAPI 3.0, but the two are nearly the same.&lt;/p&gt; &lt;p&gt;The example is a Node.js + Express + &lt;code&gt;oas-tools&lt;/code&gt; using &lt;a href="https://www.typescriptlang.org"&gt;TypeScript&lt;/a&gt; as the base programming language.&lt;/p&gt; &lt;p&gt;Here are the main commands you can use:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Transpile to TypeScript: &lt;code&gt;npm run build:live&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Run TypeScript application: &lt;code&gt;npm run dev&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Run transpiled application: &lt;code&gt;npm start&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Run tests: &lt;code&gt;npm run test&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Initialize the oas-tools middleware&lt;/h3&gt; &lt;p&gt;The following setup is required to initialize the middleware, which is located at &lt;code&gt;src/middlewares/swagger.ts&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;const swaggerDoc = loadDocumentSync(basePath + "/definition/swagger.yaml");   const options = {       controllers: basePath + "/routes",       loglevel: "debug",       strict: true,       validator: true,       docs: {           apiDocs: "/api-docs",           apiDocsPrefix: "",           swaggerUi: "/docs",           swaggerUiPrefix: ""       }   };   swaggerTools.configure(options);   swaggerTools.initialize(swaggerDoc, app, function() {       cb();   });&lt;/pre&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;swaggerDoc&lt;/code&gt;: Contains the location of the OpenAPI Specification file.&lt;/li&gt; &lt;li&gt;&lt;code&gt;options&lt;/code&gt;: Specifies the configuration. &lt;ul&gt; &lt;li&gt;&lt;code&gt;controllers&lt;/code&gt;: Location of the route controllers.&lt;/li&gt; &lt;li&gt;&lt;code&gt;loglevel&lt;/code&gt;: By defining a log level, you can categorize the logs and the amount of information that is going to appear.&lt;/li&gt; &lt;li&gt;&lt;code&gt;strict&lt;/code&gt;: Indicates whether validation must stop the request process if errors were found when validating according to the specification file.&lt;/li&gt; &lt;li&gt;&lt;code&gt;validator&lt;/code&gt;: Indicates whether validator middleware should be used.&lt;/li&gt; &lt;li&gt;&lt;code&gt;docs&lt;/code&gt;: Shows the &lt;code&gt;swagger-ui&lt;/code&gt; interface, which is located at &lt;code&gt;/docs&lt;/code&gt;endpoint, to visualize and interact with the API’s resources without having any of the implementation logic in place. It’s automatically generated from your OpenAPI Specification.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;swaggerTools.configure&lt;/code&gt;: Sets up the custom configuration.&lt;/li&gt; &lt;li&gt;&lt;code&gt;swaggerTools.initialize&lt;/code&gt;: Initializes the middleware.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Add special annotations&lt;/h3&gt; &lt;p&gt;&lt;code&gt;oas-tools&lt;/code&gt; required special annotations to define the router controller and the &lt;code&gt;operationId&lt;/code&gt; to be used. As you saw in the &lt;code&gt;.yaml&lt;/code&gt; file, we have the following annotations:&lt;/p&gt; &lt;pre&gt;paths: /hello:   post:     x-swagger-router-controller: helloWorldRoute     operationId: helloWorldPost&lt;/pre&gt; &lt;p&gt;&lt;code&gt;x-swagger-router-controller&lt;/code&gt; specifies the name of the controller file associated with the &lt;code&gt;/hello&lt;/code&gt; path. &lt;code&gt;helloWorldRoute&lt;/code&gt;, exports two routes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;export const &lt;b&gt;helloWorldGet&lt;/b&gt;  = Router().use("/", asyncHandler(getHelloWorld, "helloWorldGet"));&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;export const &lt;b&gt;helloWorldPost&lt;/b&gt;  = Router().use("/", asyncHandler(getHelloWorld, "helloWorldPost"));&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code&gt;helloWorldGet&lt;/code&gt; and &lt;code&gt;helloWorldPost&lt;/code&gt; need to be added as &lt;code&gt;operationId&lt;/code&gt;’s.&lt;/p&gt; &lt;h3&gt;Implement the business logic&lt;/h3&gt; &lt;p&gt;Now that we have done all the required setup to validate the request and to ensure that it matches our specification, let’s define the business logic, as you can see &lt;code&gt;src/controllers/hello&lt;/code&gt; contains the following:&lt;/p&gt; &lt;pre&gt;export async function getHelloWorld(req: Request, res: Response): P&amp;#60;any&amp;#62; {   const greeting =   req.swagger.params &amp;#38;&amp;#38; req.swagger.params.greeting.value ? req.swagger.params.greeting.value : "World";   debug.log("Greeting: ", greeting);   res.send({"msg": "hello " + greeting} as Hello); }&lt;/pre&gt; &lt;p&gt;&lt;code&gt;oas-tools&lt;/code&gt; provides the parameters inside the &lt;code&gt;req.swagger&lt;/code&gt; property. The previous code gets the parameters and returns the &lt;code&gt;Hello&lt;/code&gt; object with the &lt;code&gt;msg&lt;/code&gt; property, as we defined in the spec.&lt;/p&gt; &lt;h3&gt;Run the application and check it&lt;/h3&gt; &lt;p&gt;Type &lt;code&gt;npm run dev&lt;/code&gt; and see how &lt;code&gt;oas-tools&lt;/code&gt; is initialized, which checks if the controllers and routes are defined:&lt;/p&gt; &lt;pre&gt;2018-12-12T16:34:24.498Z info: Valid specification file 2018-12-12T16:34:24.505Z info: Specification file dereferenced 2018-12-12T16:34:24.506Z debug: Register: POST - /hello 2018-12-12T16:34:24.506Z debug:   POST - /hello 2018-12-12T16:34:24.506Z debug:     OAS-doc has x-swagger-router-controller property 2018-12-12T16:34:24.748Z debug:       Controller for POST - /hello: OK 2018-12-12T16:34:24.753Z debug: Register: GET - /hello 2018-12-12T16:34:24.753Z debug:   GET - /hello 2018-12-12T16:34:24.753Z debug:     OAS-doc has x-swagger-router-controller property 2018-12-12T16:34:24.753Z debug:       Controller for GET - /hello: OK&lt;/pre&gt; &lt;p&gt;Once the service is up and running, we can create two &lt;code&gt;curl&lt;/code&gt; requests to check if &lt;code&gt;oas-tools&lt;/code&gt; does the required job.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;GET request with &lt;code&gt;greeting&lt;/code&gt; parameter is OK&lt;br /&gt; Request:&lt;/p&gt; &lt;pre&gt;curl -X GET "http://localhost:8001/api/hello?greeting=redhat" -H "accept: application/json"&lt;/pre&gt; &lt;p&gt;Response:&lt;/p&gt; &lt;pre&gt;{  "msg": "hello redhat" }&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;GET request without greeting parameter fails&lt;br /&gt; Request:&lt;/p&gt; &lt;pre&gt;curl -X GET "http://localhost:8001/api/hello" -H "accept: application/json"&lt;/pre&gt; &lt;p&gt;Response:&lt;/p&gt; &lt;pre&gt;[{"message":"Missing parameter greeting in query. "}]&lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;As you can see, with this easy example. You only need to focus on the business logic. The &lt;code&gt;oas-tools&lt;/code&gt; middleware checks the incoming request against the API specification.&lt;/p&gt; &lt;h2&gt;Extras&lt;/h2&gt; &lt;p&gt;In addition, if you are working on a client app, there are code generators for many languages, which means that you don’t need to generate the required classes if you want to call to the back end:&lt;/p&gt; &lt;p&gt;The tool that does this for us is at &lt;a href="https://github.com/swagger-api/swagger-codegen.git"&gt;github.com/swagger-api/swagger-codegen.git&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Note&lt;/b&gt;: Use tag &lt;code&gt;3.0.0&lt;/code&gt; for OpenAPI version 3 and tag &lt;code&gt;master&lt;/code&gt; for version 2.x.&lt;/p&gt; &lt;p&gt;First of all, download the tool and type the following:&lt;/p&gt; &lt;pre&gt;mvn clean package java -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar generate -i &amp;#60;yaml DefinitionFileLocation&amp;#62;.yaml -l typescript-angular -o test&lt;/pre&gt; &lt;p&gt;By running this command, we are able to generate the required classes for any programming language that is supported by the &lt;code&gt;swagger-codegen-cli&lt;/code&gt; tool. The above command generates the classes for Angular projects.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screenshot-2019-01-02-at-10.12.17.png"&gt;&lt;img class=" aligncenter wp-image-551817 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screenshot-2019-01-02-at-10.12.17.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screenshot-2019-01-02-at-10.12.17.png" alt="API generated in test folder" width="623" height="205" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screenshot-2019-01-02-at-10.12.17.png 623w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screenshot-2019-01-02-at-10.12.17-300x99.png 300w" sizes="(max-width: 623px) 100vw, 623px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Many available languages are supported:&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screenshot-2019-01-02-at-10.12.27.png"&gt;&lt;img class=" aligncenter wp-image-551827 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screenshot-2019-01-02-at-10.12.27.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screenshot-2019-01-02-at-10.12.27.png" alt="Supported languages" width="614" height="233" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screenshot-2019-01-02-at-10.12.27.png 614w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screenshot-2019-01-02-at-10.12.27-300x114.png 300w" sizes="(max-width: 614px) 100vw, 614px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, we have seen how we can set up a Node.js microservice by generating first the API Specification file and focusing only on developing the business logic. All the validation of the API will be managed by &lt;code&gt;oas-tools&lt;/code&gt;, and as a result, we will save development time.&lt;/p&gt; &lt;h2&gt;Other resources&lt;/h2&gt; &lt;p&gt;Here are other articles on the Red Hat Developer blog about related topics:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/07/12/contract-first-api-design-with-apicurio-and-red-hat-fuse/" rel="bookmark"&gt;Contract-First API Design with Apicurio and Red Hat Fuse/Camel&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/04/11/api-journey-idea-deployment-agile-part1/"&gt;An API Journey: From idea to deployment the Agile Way&lt;/a&gt; – (A three part series)&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/10/04/modern-web-apps-openshift-part-1/" rel="bookmark"&gt;Modern Web Applications on OpenShift: Part 1 – Web apps in two commands&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F14%2Fbuilding-a-node-js-service-using-the-api-first-approach%2F&amp;#38;linkname=Building%20a%20Node.js%20service%20using%20the%20API-first%20approach" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F14%2Fbuilding-a-node-js-service-using-the-api-first-approach%2F&amp;#38;linkname=Building%20a%20Node.js%20service%20using%20the%20API-first%20approach" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F14%2Fbuilding-a-node-js-service-using-the-api-first-approach%2F&amp;#38;linkname=Building%20a%20Node.js%20service%20using%20the%20API-first%20approach" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F14%2Fbuilding-a-node-js-service-using-the-api-first-approach%2F&amp;#38;linkname=Building%20a%20Node.js%20service%20using%20the%20API-first%20approach" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F14%2Fbuilding-a-node-js-service-using-the-api-first-approach%2F&amp;#38;linkname=Building%20a%20Node.js%20service%20using%20the%20API-first%20approach" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F14%2Fbuilding-a-node-js-service-using-the-api-first-approach%2F&amp;#38;linkname=Building%20a%20Node.js%20service%20using%20the%20API-first%20approach" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F14%2Fbuilding-a-node-js-service-using-the-api-first-approach%2F&amp;#38;linkname=Building%20a%20Node.js%20service%20using%20the%20API-first%20approach" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F14%2Fbuilding-a-node-js-service-using-the-api-first-approach%2F&amp;#38;linkname=Building%20a%20Node.js%20service%20using%20the%20API-first%20approach" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F14%2Fbuilding-a-node-js-service-using-the-api-first-approach%2F&amp;#038;title=Building%20a%20Node.js%20service%20using%20the%20API-first%20approach" data-a2a-url="https://developers.redhat.com/blog/2019/01/14/building-a-node-js-service-using-the-api-first-approach/" data-a2a-title="Building a Node.js service using the API-first approach"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/14/building-a-node-js-service-using-the-api-first-approach/"&gt;Building a Node.js service using the API-first approach&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/fGQO80V8daI" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Nowadays technology companies are adopting the API as one of the most valuable pieces of their business. What does it mean when we talk about API-first development? We already know the benefits of using an API-first approach: Reduced interdependencies Earlier validation Early feedback with the freedom to change Improved efficiency This article describes what it means [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/14/building-a-node-js-service-using-the-api-first-approach/"&gt;Building a Node.js service using the API-first approach&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/01/14/building-a-node-js-service-using-the-api-first-approach/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">551807</post-id><dc:creator>Mikel Sanchez</dc:creator><dc:date>2019-01-14T13:00:04Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/14/building-a-node-js-service-using-the-api-first-approach/</feedburner:origLink></entry><entry><title>Integration Key to Customer Experience - Example Process Integration</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Unn6G_z9z8I/integration-key-to-customer-experience-example-process-integration.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Architecture Blueprints" scheme="searchisko:content:tags" /><category term="best practices" scheme="searchisko:content:tags" /><category term="BPM Suite" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-integration_key_to_customer_experience_example_process_integration</id><updated>2019-01-15T12:05:35Z</updated><published>2019-01-14T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-u7XB2B3xaNQ/XDhn_IlLITI/AAAAAAAAtZU/OamDcBi0IJg0_GNUii6H3mXPDGb8OMuZQCLcBGAs/s1600/omnichannel-header.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="815" data-original-width="1420" height="183" src="https://1.bp.blogspot.com/-u7XB2B3xaNQ/XDhn_IlLITI/AAAAAAAAtZU/OamDcBi0IJg0_GNUii6H3mXPDGb8OMuZQCLcBGAs/s320/omnichannel-header.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Part 7 - Example process integration&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style="text-align: left;"&gt;&lt;/div&gt;In &lt;a href="https://www.schabell.org/2018/12/integration-key-to-customer-experience-storage-services.html" target="_blank"&gt;my previous article from this series&lt;/a&gt; we looked in to details that determine how your integration becomes the key to transforming your customer experience.&lt;br /&gt;&lt;br /&gt;It started with laying out the process of how I've approached the use case by researching successful customer portfolio solutions as the basis for a generic architectural blueprint.&lt;br /&gt;&lt;br /&gt;Having completed our discussions on the blueprint details, it's now time to look at a few specific examples.&lt;br /&gt;&lt;br /&gt;This article walks you through an example integration scenario showing how expanding the previously discussed details provides blueprints for your own integration scenarios.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Blueprint scenario&lt;/h3&gt;&lt;div&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;br /&gt;As mentioned before, the architectural details covered here are base on real customer integration solutions using open source technologies. The example scenario presented here is a&amp;nbsp;&lt;i&gt;generic common blueprint&lt;/i&gt;&amp;nbsp;that was uncovered researching customer solutions. It's my intent to provide a blueprint that provides guidance and not deep technical details.&lt;br /&gt;&lt;br /&gt;This section covers the visual representations as presented, but it's expected that they'll be evolving visually over time. There are many ways to represent each element in this architectural blueprint, but I've chosen icons, text and colours that I hope are going to make it all easy to absorb. Feel free to post comments at the bottom of this post, or &lt;a href="https://www.schabell.org/p/contact.html" target="_blank"&gt;contact me directly&lt;/a&gt; with your feedback.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://4.bp.blogspot.com/-mbkssc0vxL4/XDzkGGVVPKI/AAAAAAAAtZk/JSkh6uy95icCGVTsoDKzP5CX6xNJy0fKwCLcBGAs/s1600/Screenshot%2B2019-01-14%2Bat%2B14.33.22.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="1019" data-original-width="1600" height="203" src="https://4.bp.blogspot.com/-mbkssc0vxL4/XDzkGGVVPKI/AAAAAAAAtZk/JSkh6uy95icCGVTsoDKzP5CX6xNJy0fKwCLcBGAs/s320/Screenshot%2B2019-01-14%2Bat%2B14.33.22.png" title="" width="320" /&gt;&lt;/a&gt;Now let's take a look at the details in this blueprint and outline the solution.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Process integration&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;The example blueprint shown in the figure titled &lt;i&gt;Example: Process Integration&lt;/i&gt;&amp;nbsp;outlines how to integrate automation in to your architecture. In this example, starting from the top, a mobile device is used to connect to your services through an API gateway. It's leveraging a group of microservices that provide &lt;i&gt;frontend&lt;/i&gt;&amp;nbsp;functionality, everything from push notifications, synchronization, to simple more complex activities that front end application need to service their clients.&lt;br /&gt;&lt;br /&gt;These &lt;i&gt;frontend microservices&lt;/i&gt;&amp;nbsp;are gathering data and information from the various organizational backend systems by working through &lt;i&gt;integration microservices&lt;/i&gt;.&amp;nbsp; There is a conscience effort here to keep this blueprint example as concise as possible, therefore the integration of various potential &lt;i&gt;backend systems&lt;/i&gt;&amp;nbsp;has been simplified to a single representative box.&lt;br /&gt;&lt;br /&gt;When interaction with process automation is desired, the mobile application works with &lt;i&gt;process facade microservices&lt;/i&gt;&amp;nbsp;that expose any functionality of the &lt;i&gt;process server&lt;/i&gt;, which leverages &lt;i&gt;container native storage&lt;/i&gt;&amp;nbsp;highlighting container-based storage options featured by container platforms.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Third party services&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://2.bp.blogspot.com/-gIqn_rmoyEA/XD3ESPT5Z2I/AAAAAAAAtZ4/cXddXr3WBhgpZLh4wNhW1tq0YqkZSpYagCLcBGAs/s1600/Screenshot%2B2019-01-15%2Bat%2B06.30.03.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="980" data-original-width="1600" height="196" src="https://2.bp.blogspot.com/-gIqn_rmoyEA/XD3ESPT5Z2I/AAAAAAAAtZ4/cXddXr3WBhgpZLh4wNhW1tq0YqkZSpYagCLcBGAs/s320/Screenshot%2B2019-01-15%2Bat%2B06.30.03.png" title="" width="320" /&gt;&lt;/a&gt;As many organizations have to deal with third party legacy decisions in their architectures, it makes sense to show the versatility that open source integration technology offers. It's easy to lean on metaphors where open standards in open source integration solutions offer organizations the &lt;a href="http://www.fundinguniverse.com/company-histories/victorinox-ag-history/" target="_blank"&gt;&lt;i&gt;versatility of a&amp;nbsp; Swiss Army knife&lt;/i&gt;&lt;/a&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The blueprint shown in figure titled &lt;i&gt;Example: Process Integration with Third Party Services&lt;/i&gt;&amp;nbsp;expands the original process integration use case with a &lt;i&gt;third party service platform&lt;/i&gt;.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Without specifying this &lt;i&gt;third party service platform&lt;/i&gt;, it's clear that leveraging the &lt;i&gt;integration microservices&lt;/i&gt;&amp;nbsp;an organization can establish a separation from legacy technology choices that might not be standing the test of time.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;What's next&lt;/h3&gt;&lt;div&gt;This overview covers the first example architecture blueprints on process integration for omnichannel customer experience use case.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;An overview of the series on omnichannel customer experience portfolio architecture blueprint can be found here:&lt;br /&gt;&lt;ol style="text-align: left;"&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-introduction.html" target="_blank"&gt;An introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-architectural-elements.html" target="_blank"&gt;Generic common architectural elements&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-external-application-details.html" target="_blank"&gt;External application details&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/12/integration-key-to-customer-experience-api-management-details.html" target="_blank"&gt;API management details&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/12/integraiton-key-to-customer-experience-container-platform.html" target="_blank"&gt;Container platform essentials&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/12/integration-key-to-customer-experience-storage-services.html" target="_blank"&gt;Storage services&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2019/01/integration-key-to-customer-experience-example-process-integration.html" target="_blank"&gt;Example process integration&lt;/a&gt;&lt;/li&gt;&lt;li&gt;More example integration blueprints&lt;/li&gt;&lt;/ol&gt;Catch up on any articles you missed by following one of the links above.&lt;br /&gt;&lt;br /&gt;Next in this series, we start taking a look at more specific integration architecture blueprints that tie in all the elements we've discussed as part of a specific case in an architecture for omnichannel customer experience.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=G-j7FSJM7Dw:8dy-OgdSa84:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=G-j7FSJM7Dw:8dy-OgdSa84:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=G-j7FSJM7Dw:8dy-OgdSa84:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=G-j7FSJM7Dw:8dy-OgdSa84:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=G-j7FSJM7Dw:8dy-OgdSa84:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=G-j7FSJM7Dw:8dy-OgdSa84:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=G-j7FSJM7Dw:8dy-OgdSa84:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=G-j7FSJM7Dw:8dy-OgdSa84:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=G-j7FSJM7Dw:8dy-OgdSa84:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=G-j7FSJM7Dw:8dy-OgdSa84:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=G-j7FSJM7Dw:8dy-OgdSa84:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/G-j7FSJM7Dw" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Unn6G_z9z8I" height="1" width="1" alt=""/&gt;</content><summary>Part 7 - Example process integration In my previous article from this series we looked in to details that determine how your integration becomes the key to transforming your customer experience. It started with laying out the process of how I've approached the use case by researching successful customer portfolio solutions as the basis for a generic architectural blueprint. Having completed our di...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-01-14T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/G-j7FSJM7Dw/integration-key-to-customer-experience-example-process-integration.html</feedburner:origLink></entry><entry><title>Service task repository integrated into Business Central</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/9Idi-q-SZ1c/service-task-repository-integrated-into.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Maciej Swiderski</name></author><id>searchisko:content:id:jbossorg_blog-service_task_repository_integrated_into_business_central</id><updated>2019-01-11T15:58:07Z</updated><published>2019-01-11T15:58:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Service tasks (aka work items) are of tremendous use in business processes. Users can build their custom logic into well defined tasks that can be reused across processes or even projects. jBPM comes with rather large set of service tasks out of the box, you can explore them in jbpm-work-items repository in GitHub.&lt;br /&gt;&lt;br /&gt;jBPM also provides standalone service repo that could be used from jBPM designer to import service tasks. Though that was just intermediate step towards better integration with authoring tooling - Business Central.&lt;br /&gt;&lt;br /&gt;Brand new integration between service task repository and business central is under development and I'd like to share a bit of news about this upcoming feature...&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Service Task administration&lt;/h3&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-oz34w49GVP8/XDi5pbM9cDI/AAAAAAAABkk/ixkx16pgOTcvrdLU1ap3WJz7Zmd4tkGNwCLcBGAs/s1600/Screenshot%2B2019-01-11%2Bat%2B16.30.18.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="875" data-original-width="1600" height="350" src="https://1.bp.blogspot.com/-oz34w49GVP8/XDi5pbM9cDI/AAAAAAAABkk/ixkx16pgOTcvrdLU1ap3WJz7Zmd4tkGNwCLcBGAs/s640/Screenshot%2B2019-01-11%2Bat%2B16.30.18.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;First and foremost there is global administration of service tasks. This allows to select what service tasks (that the authoring environment comes with) are allowed to be installed in projects.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-jFwj50U8-JE/XDi5rbNHt2I/AAAAAAAABko/5VIQ9qfXT_8JC3jU4X62ZRfbN8BMz5WUwCLcBGAs/s1600/Screenshot%2B2019-01-11%2Bat%2B16.30.37.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="847" data-original-width="1600" height="338" src="https://1.bp.blogspot.com/-jFwj50U8-JE/XDi5rbNHt2I/AAAAAAAABko/5VIQ9qfXT_8JC3jU4X62ZRfbN8BMz5WUwCLcBGAs/s640/Screenshot%2B2019-01-11%2Bat%2B16.30.37.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;There are three configuration options&lt;br /&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;Install as Maven artefact - will upload the jar file of the handler if it does not exist in the local or Business Central's maven repo&lt;/li&gt;&lt;li&gt;Install service tasks artefact as maven dependency of project - will update pom.xml of project upon installation of the service task&lt;/li&gt;&lt;li&gt;Use version range - when adding service task artefact as project dependency it will use version range instead of fixed version e.g. [7.16,) instead of 7.16.0.Final&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Service task installation - project settings&lt;/h3&gt;Once the service tasks are enabled they can be used within projects. Simply go into project settings page and install (or uninstall) service tasks of your desire. Note that this settings page will only list service tasks that are globally enabled.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-cMuOzc2zyDE/XDi5s5PNZUI/AAAAAAAABks/sviE5wsAOtoYa8OhA6ge2OZUrhSK6tiJQCLcBGAs/s1600/Screenshot%2B2019-01-11%2Bat%2B16.33.47.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="691" data-original-width="1600" height="276" src="https://1.bp.blogspot.com/-cMuOzc2zyDE/XDi5s5PNZUI/AAAAAAAABks/sviE5wsAOtoYa8OhA6ge2OZUrhSK6tiJQCLcBGAs/s640/Screenshot%2B2019-01-11%2Bat%2B16.33.47.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;Service tasks can then be installed into projects. During installation following will be done&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;dedicated wid (work definition) file is created for installed service task&lt;/li&gt;&lt;li&gt;custom icon for the service task is installed into project resources (if exists)&lt;/li&gt;&lt;li&gt;pom.xml of the project is updated to include dependencies (if it is enabled in the global settings)&lt;/li&gt;&lt;li&gt;deployment descriptor is updated to register work item handler for the service task&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Similar steps are performed for uninstallation though to remove rather than add configuration.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Here is a short video (this time with audio.. not sure if that is good or bad ...) that illustrates the entire feature working together, including use of service task in business process.&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/DKCallzn6-o" width="560"&gt;&lt;/iframe&gt; &lt;br /&gt;This is part one of this feature so stay tuned for more updates in coming weeks...&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/9Idi-q-SZ1c" height="1" width="1" alt=""/&gt;</content><summary>Service tasks (aka work items) are of tremendous use in business processes. Users can build their custom logic into well defined tasks that can be reused across processes or even projects. jBPM comes with rather large set of service tasks out of the box, you can explore them in jbpm-work-items repository in GitHub. jBPM also provides standalone service repo that could be used from jBPM designer to...</summary><dc:creator>Maciej Swiderski</dc:creator><dc:date>2019-01-11T15:58:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2019/01/service-task-repository-integrated-into.html</feedburner:origLink></entry><entry><title>Knative: Deep Dive, from Installation to Deployment</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/iAObrEhBg-c/" /><category term="Announcement" /><category term="DevNation" /><category term="OpenShift" /><category term="Serverless" /><author><name>David Millsaps</name></author><id>https://developers.redhat.com/blog/?p=553527</id><updated>2019-01-11T15:00:38Z</updated><published>2019-01-11T15:00:38Z</published><content type="html">&lt;p&gt;Join the Red Hat DevNation for an upcoming live tech talk on &lt;a href="http://app.engage.redhat.com/e/er?s=1795&amp;#38;lid=108312&amp;#38;elqTrackId=06d3d828d4e64472a537b723a7cccdfb&amp;#38;elq=6a3af68c6f0a4744a61c3b0ef311de78&amp;#38;elqaid=58613&amp;#38;elqat=1" target="_blank" rel="noopener" data-saferedirecturl="https://www.google.com/url?q=http://app.engage.redhat.com/e/er?s%3D1795%26lid%3D108312%26elqTrackId%3D06d3d828d4e64472a537b723a7cccdfb%26elq%3D6a3af68c6f0a4744a61c3b0ef311de78%26elqaid%3D58613%26elqat%3D1&amp;#38;source=gmail&amp;#38;ust=1547218369029000&amp;#38;usg=AFQjCNENxRTMVTjs7Bb277D2nqzOm5uBsQ"&gt;January 17th, 2019 at 12:00pm EST for &amp;#8211; Knative deep dive&lt;/a&gt; presented by Kamesh Sampath.&lt;/p&gt; &lt;p&gt;Reusable components that focus on solving many mundane but difficult tasks like orchestrating source-to-container workflows, routing and managing traffic during deployment, autoscaling your workloads, or binding running services to eventing ecosystems free developers to work on more interesting coding.&lt;/p&gt; &lt;p&gt;In this webinar, we’ll install &lt;a href="https://developers.redhat.com/topics/knative"&gt;Knative&lt;/a&gt; and its components and take an in-depth look into:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The building blocks of Knative—such as serving, building and eventing ecosystems.&lt;/li&gt; &lt;li&gt;Demystify the deployment model that allows you to deploy your cloud-native services on Kubernetes and easily turn serve them as &lt;a href="https://developers.redhat.com/topics/serverless-architecture"&gt;serverless services&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Various deployment strategies, such as latest and pinned, and how to use Knative build to convert a source-to-URL (serverless service).&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;&lt;a href="https://onlinexperiences.com/scripts/Server.nxp?LASCmd=AI:4;F:QS!10100&amp;#38;ShowUUID=8D2FDBD4-0346-4818-A116-F06B8A8AEE3C&amp;#38;AffiliateData=701f2000001D6D4AAK"&gt;&lt;strong&gt;Register to attend&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt; &lt;h2&gt;Kamesh Sampath, director, Developer Experience, Red Hat&lt;/h2&gt; &lt;p&gt;Kamesh Sampath, Red Hat director of Developer Experience, is an evangelist on topics and technologies like Knative and Spring Boot on Kubernetes and OpenShift®, and he shares his knowledge on how to build better cloud-native applications using these technologies. Kamesh has spent a lot of time in the services industry helping customers build and deploy Java&lt;img src="https://s.w.org/images/core/emoji/2.4/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" /&gt; -based solutions. He’s the creator of vert.x-maven-plugin, and he’s been an active contributor to open source projects like Knative, Minishift, Eclipse Che, and fabric8, among others.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#38;linkname=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F11%2Fknative-deep-dive-from-installation-to-deployment%2F&amp;#038;title=Knative%3A%20Deep%20Dive%2C%20from%20Installation%20to%20Deployment" data-a2a-url="https://developers.redhat.com/blog/2019/01/11/knative-deep-dive-from-installation-to-deployment/" data-a2a-title="Knative: Deep Dive, from Installation to Deployment"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/11/knative-deep-dive-from-installation-to-deployment/"&gt;Knative: Deep Dive, from Installation to Deployment&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/iAObrEhBg-c" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Join the Red Hat DevNation for an upcoming live tech talk on January 17th, 2019 at 12:00pm EST for &amp;#8211; Knative deep dive presented by Kamesh Sampath. Reusable components that focus on solving many mundane but difficult tasks like orchestrating source-to-container workflows, routing and managing traffic during deployment, autoscaling your workloads, or binding running services to eventing [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/11/knative-deep-dive-from-installation-to-deployment/"&gt;Knative: Deep Dive, from Installation to Deployment&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/01/11/knative-deep-dive-from-installation-to-deployment/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">553527</post-id><dc:creator>David Millsaps</dc:creator><dc:date>2019-01-11T15:00:38Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/11/knative-deep-dive-from-installation-to-deployment/</feedburner:origLink></entry><entry><title>Apache Camel explained to Luke Skywalker</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OEW2DlauXQw/apache-camel-explained-to-luke-skywalker.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_explained_to_luke_skywalker</id><updated>2019-01-11T12:55:01Z</updated><published>2019-01-11T12:55:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="text-align: center;"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;A long time ago in a galaxy far,&lt;/span&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;far away ...&lt;/span&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;there was a a young boy,&lt;/span&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;whom went to&lt;/span&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;a href="https://twitter.com/HamillHimself/status/1083070331927986177"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;his first audition&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;...&amp;nbsp;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://twitter.com/HamillHimself/status/1083070331927986177"&gt;&lt;img border="0" data-original-height="384" data-original-width="581" height="211" src="https://4.bp.blogspot.com/-gpEl9ea4CNM/XDh8Ouw-iiI/AAAAAAAAB0s/OpLlveuerC47C5zpr5Mhq82yw3XzrggwgCLcBGAs/s320/luke-1.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;What a story. So Mark Hamill is addressed as Mr Camel. What an honour to have him in our Camel family and to be known as the first Mr Camel. The &lt;a href="https://twitter.com/camelfuse"&gt;2nd Mr Camel is our spirit animal&lt;/a&gt; for the Apache Camel project.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://twitter.com/camelfuse"&gt;&lt;img border="0" data-original-height="709" data-original-width="659" height="200" src="https://3.bp.blogspot.com/-15FZGlPk42g/XDiBV63khjI/AAAAAAAAB04/OZ_6PVpMbLU30afQm7GXwwAXguf1AraxQCLcBGAs/s200/mrcamel.png" width="185" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Okay back to Luke Skywalker, so his tweet lead to people talking about Camel's and &lt;a href="https://twitter.com/pablogl/status/1083088233075040256"&gt;I was then brought into the conversation&lt;/a&gt; whether Mark's audition story was my inspiration for Apache Camel, which again lead to Mark Hamill (&lt;a href="https://en.wikipedia.org/wiki/Luke_Skywalker"&gt;Luke Skywalker&lt;/a&gt;) asking what Apache Camel is:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://twitter.com/pablogl/status/1083088233075040256"&gt;&lt;img border="0" data-original-height="515" data-original-width="605" height="272" src="https://2.bp.blogspot.com/-jTkIBWDLQqQ/XDiPRhIco-I/AAAAAAAAB1k/9RxO0A1bcYMOV3kAiJbqpGhfRZ_3ENuEACLcBGAs/s320/luke-2.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;br /&gt;I must say I have never seen the day, where Luke Skywalker would ask me what &lt;a href="http://camel.apache.org/"&gt;Apache Camel&lt;/a&gt; is&amp;nbsp; - I am a great fan of Star Wars and yes I am so old that I favour the first 3 classic movies.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Explaining&amp;nbsp;what Apache Camel is to Luke Skywalker&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;At first though you may think that Apache Camel is a new model of the 4-legged walker with or without humps ... but it is &lt;b&gt;NOT&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-Tyh2jxDkFAw/XDiDIcls3NI/AAAAAAAAB1M/_IjpWNDt5UEp_pHZFkT1iwHGW9UkJ96bACLcBGAs/s1600/walker.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="433" data-original-width="768" height="180" src="https://4.bp.blogspot.com/-Tyh2jxDkFAw/XDiDIcls3NI/AAAAAAAAB1M/_IjpWNDt5UEp_pHZFkT1iwHGW9UkJ96bACLcBGAs/s320/walker.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Instead let us ask the most wise man in the universe, Yoda, for the answer:&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;"Software that enables you to do integrations between other softwares, it is." - &lt;b&gt;Yoda&lt;/b&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;And in my humble words ...&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;"What the force telekinesis does for universal Jedi connection ... the Apache Camel does for universal computer integration .... mindblow powers they are" - &lt;b&gt;DavsClaus&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;And here is&amp;nbsp;&lt;a href="https://twitter.com/matt_codes/status/1083293258871197696"&gt;another great explanation&lt;/a&gt;&amp;nbsp;from Matthew what Apache Camel is:&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-7xQ_pHRR2Uw/XDiGGOmAw8I/AAAAAAAAB1Y/unPTtoKdoY0EKZ8HJ2bJ3uLI02xY4Ak0QCLcBGAs/s1600/mule.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="119" data-original-width="589" height="80" src="https://4.bp.blogspot.com/-7xQ_pHRR2Uw/XDiGGOmAw8I/AAAAAAAAB1Y/unPTtoKdoY0EKZ8HJ2bJ3uLI02xY4Ak0QCLcBGAs/s400/mule.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;b&gt;Has Luke Skywalker used Apache Camel?&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;Yes Mark you would unknowingly have used Apache Camel. Here is why.&amp;nbsp;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;Apache Camel is a software project that has been around for over a decade. And its a very succesfull project and are thus widespread in use across all industries, enterprises, government institutions, and used in all parts of our planet.&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;In the US, for example, the &lt;a href="https://www.faa.gov/"&gt;FAA&lt;/a&gt; uses Camel in their services for air-traffic control. So anyone whom has been traveling by plane in the US airspace (covers 15% of the planet) would have used Camel.&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;Camel is also ubiquitous&amp;nbsp;used among banking and finance enterprises, so any US citizen whom has done bank transfers, credit card transactions etc would at one point have the banking systems exchange data via software with Camel included.&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;If you are a Netflix subscriber then their payment system is using Camel as well. If you have a parcel delivery by brown-trucks (UPS) then Camel is helping with the track and trace.&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;b&gt;Epilogue&lt;/b&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;Thank you Mark Hamill for asking me what Apache Camel is. I have been working on Apache Camel for more than 10 years and I still not able to explain it to the common man in a few words. Even trying to explain it to my peers in the IT industry is failing, evident by my &lt;a href="https://www.manning.com/books/camel-in-action-second-edition"&gt;last book&lt;/a&gt; is a staggering 900 page monster &lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;May the force be with you&lt;/span&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;span style="font-family: Arial, Helvetica, sans-serif;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=rA083IUWGvI:RniJi0cNmlY:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=rA083IUWGvI:RniJi0cNmlY:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=rA083IUWGvI:RniJi0cNmlY:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=rA083IUWGvI:RniJi0cNmlY:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=rA083IUWGvI:RniJi0cNmlY:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=rA083IUWGvI:RniJi0cNmlY:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=rA083IUWGvI:RniJi0cNmlY:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/rA083IUWGvI" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OEW2DlauXQw" height="1" width="1" alt=""/&gt;</content><summary>A long time ago in a galaxy far, far away ... there was a a young boy, whom went to his first audition ...  What a story. So Mark Hamill is addressed as Mr Camel. What an honour to have him in our Camel family and to be known as the first Mr Camel. The 2nd Mr Camel is our spirit animal for the Apache Camel project. Okay back to Luke Skywalker, so his tweet lead to people talking about Camel's and ...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2019-01-11T12:55:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/rA083IUWGvI/apache-camel-explained-to-luke-skywalker.html</feedburner:origLink></entry><entry><title>This week in JBoss (10th January 2019): 2019 already on fire!!!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OPbOROGhHPc/this-week-in-jboss-10th-january-2019-2019-already-on-fire" /><category term="Camel" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="gradle" scheme="searchisko:content:tags" /><category term="Hibernate" scheme="searchisko:content:tags" /><category term="java11" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><author><name>Romain Pelisse</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_10th_january_2019_2019_already_on_fire</id><updated>2019-01-10T16:49:51Z</updated><published>2019-01-10T16:48:10Z</published><content type="html">&lt;!-- [DocumentBodyStart:f87ddb45-3c27-4575-bc0e-8e07e2fcfa5d] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p style="text-indent: 0px;"&gt;&lt;span style="font-style: italic; color: #000000;"&gt;This new year has barely begun but the JBoss community is already running full steam ahead! But don&amp;#8217;t worry, this editorial will catch you up in no time.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.flickr.com/photos/timo_w2s/6977396713/in/photolist-bCyYXk-7mGNU-pEQ8of-2bMjgE1-7Ctfmd-S46YZK-9e8KsD-7BfB51-rnTQPU-beZWk4-dWbKE5-7BbNwX-X84xFa-hRoHKR-rjGewM-rrJWBU-7raXix-2buqENg-2cNXh11-QKnFcm-bsQ2gi-qFBAXD-jGPq5a-Eu4Q54-98Yvn2-jvHYnc-rN5NXS-zko4w-2a7AwE7-jGSqEo-2czD9F8-2buqFAZ-269fNvv-P8c1qg-s3nZHu-s3onLC-K3oUhE-73xwQ3-S7hCWT-bsQ2Fc-5TvCDD-qTv5YP-5TvBPz-5TvCRz-bMQXmk-dWK2DS-2cG3wEg-KSdmNX-KS7Dzz-KSdGfn" rel="nofollow"&gt;&lt;img alt="Fire" height="333" src="https://farm8.staticflickr.com/7064/6977396713_cdee6277fd.jpg" style="display: block; margin-left: auto; margin-right: auto;" width="500"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;Wildfly has a new project lead!&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Let's start by some rather important community news: &lt;a class="jive-link-external-small" href="http://www.davsclaus.com/2019/01/apache-camel-2018-numbers.html" rel="nofollow"&gt;WildFly Project Lead is now Brian Stansberry&lt;/a&gt; ! Willdfly is a crucial project for the JBoss community but we are very lucky to see Brian Stansberry taking the lead here. He has been working for years and the project and he is a perfect fit for the position.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2 class="active_link" title="http://www.davsclaus.com/2019/01/apache-camel-2018-numbers.html"&gt;Winter is the perfect time to Hibernate!&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;January is the hear of Winter so it's only but fitting that the Hibernate community is quite active! First of all, the last weeks have seen quite a few interesting releases:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/12/19/hibernate-community-newsletter-2018-25/" rel="nofollow"&gt;Hibernate Validator 6.0.14.Final released&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/12/18/hibernate-ogm-5-4-1-Final-released/" rel="nofollow"&gt;Hibernate OGM 5.4.1.Final release&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/12/20/hibernate-search-5-11-0-Final/" rel="nofollow"&gt;Hibernate Search 5.11.0.Final is out!&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;But there was quite a lot more happening at the same time! If you want to catch up, just browse the last two community newsletters they've released:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/12/19/hibernate-community-newsletter-2018-25/" rel="nofollow"&gt;Hibernate Community Newsletter 25/2018&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2019/01/07/hibernate-community-newsletter-2019-01/" rel="nofollow"&gt;Hibernate Community Newsletter 01/2019&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Evangelist's Corner&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Our very own Eric D.Schabell appears to have decided to skip the winter holidays altogether and just keep blogging and posting like a machine! Look at all the material he released in the past weeks:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/12/integration-key-to-customer-experience-storage-services.html" rel="nofollow"&gt;Eric D. Schabell: Integration Key to Customer Experience - Storage Services&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/12/2018-in-review-portfolio-architecture-and-storytelling.html" rel="nofollow"&gt;Eric D. Schabell: 2018 in review - Portfolio Architecture and storytelling&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/01/modern-process-integration-tooling-workshop-lab02.html" rel="nofollow"&gt;Eric D. Schabell: Modern Process Integration Tooling Workshop - Lab 2 Create a New Project&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/01/codemotion-rome-sharing-career-advice-and-cloud-pitfalls.html" rel="nofollow"&gt;Eric D. Schabell: Codemotion Rome - Sharing career advice and cloud pittfalls&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/12/integraiton-key-to-customer-experience-container-platform.html" rel="nofollow"&gt;Eric D. Schabell: Integration Key to Customer Experience - Container Platform Essentials&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Techbytes&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;By now, you should be all catch up with the news so let's now dive into some more technical topic. First, let's take a look at &lt;a class="jive-link-external-small" href="http://www.davsclaus.com/2019/01/apache-camel-2018-numbers.html" rel="nofollow"&gt;Securing an embedded Jetty server using Elytron&lt;/a&gt;. Or maybe &lt;a class="jive-link-external-small" href="http://blog.keycloak.org/2018/12/keycloak-480final-released.html" rel="nofollow"&gt;Using the Yeoman Camel-Project generator to jump start a project&lt;/a&gt; will be more up your alley? Eager for more? Well, look into &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/12/18/openshift-java-s2i-builder-java-11-grade/" rel="nofollow"&gt;Building Java 11 and Gradle containers for OpenShift&lt;/a&gt; ! At least, but not the least, Eclipse Che 7 is coming and this series of articles will make you want to try it for sure:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/12/18/eclipse-che-7-coming-part-1/" rel="nofollow"&gt;Eclipse Che 7 is Coming and It&amp;#8217;s Really Hot (1/4) &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/12/19/eclipse-che-7-is-coming-and-its-really-hot-2-4/" rel="nofollow"&gt;Eclipse Che 7 is Coming and It's Really Hot (2/4)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/12/20/eclipse-che-7-is-coming-and-its-really-hot-3-4/" rel="nofollow"&gt;Eclipse Che 7 is Coming and It's Really Hot (3/4)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/12/21/eclipse-che-7-is-coming-and-its-really-hot-4-4/" rel="nofollow"&gt;Eclipse Che 7 is Coming and It&amp;#8217;s Really Hot (4/4)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.flickr.com/photos/mtsrs/3768574359/in/photolist-eGkjAa-4C6zNZ-dt8TN8-Xtmb83-4twcon-6K1VRZ-c2BdGG-CcBuQ-WRBiUL-pyDZio-c2GQPW-qEvZ-CaJ2o-c2UN5C-c2FmJL-c2Fn4j-fK6r7i-7UXmAc-XMXYhF-9TPQx7-XRTVw4-93vNmZ-615DAC-2V6TTC-bzMR1-gLzBc-XopfrY-CcBxQ-7vVtt7-4tzh9U-c2FXnw-roSxQD-bPRFd-59y7YW-yUgWzd-6H2Yz9-4tB5G8-RbUDku-93wAiz-4wKW3L-5GfYBC-7G9S1s-4tyEYR-4tKWZh-2uhVWH-bb9cs6-ye3CBo-qZ1hme-c2AwK5-V7UcBt" rel="nofollow"&gt;&lt;img alt="Total eclipse" height="318" src="https://farm3.staticflickr.com/2568/3768574359_0904e722b0.jpg" style="display: block; margin-left: auto; margin-right: auto;" width="500"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2 class="active_link" title="https://developers.redhat.com/blog/2018/12/19/security-considerations-for-container-runtimes/"&gt;Releases, releases, releases...&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As you can see, the winter holidays has not slowed down the releases within the JBoss community:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://blog.keycloak.org/2018/12/keycloak-480final-released.html" rel="nofollow"&gt;Keycloak: Keycloak 4.8.0.Final Released&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2019/01/07/hibernate-validator-6014-final-out/" rel="nofollow"&gt;Hibernate Validator 6.0.14.Final released &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/12/18/hibernate-ogm-5-4-1-Final-released/" rel="nofollow"&gt;Hibernate OGM 5.4.1.Final release&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/12/20/hibernate-search-5-11-0-Final/" rel="nofollow"&gt;Hibernate Search 5.11.0.Final is out!&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;Decaf'&lt;/h2&gt;&lt;p&gt;This editorial should contain enough "Java" to keep you up all night! So let's me conclude with something a bit less caffeinated, but that should still be quite interesting to most members of the JBoss community: &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/12/19/security-considerations-for-container-runtimes/" rel="nofollow"&gt;Security Considerations for Container Runtimes&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;em&gt;That's all for this week's edition of the Editorial, please join us next time as we continue our journey through the JBoss Communities in search of interesting articles and news.&amp;#160; &lt;/em&gt;&lt;span class="jive-content-footer-item"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:f87ddb45-3c27-4575-bc0e-8e07e2fcfa5d] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OPbOROGhHPc" height="1" width="1" alt=""/&gt;</content><summary>This new year has barely begun but the JBoss community is already running full steam ahead! But don’t worry, this editorial will catch you up in no time. Wildfly has a new project lead!   Let's start by some rather important community news: WildFly Project Lead is now Brian Stansberry ! Willdfly is a crucial project for the JBoss community but we are very lucky to see Brian Stansberry taking the l...</summary><dc:creator>Romain Pelisse</dc:creator><dc:date>2019-01-10T16:48:10Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2019/01/10/this-week-in-jboss-10th-january-2019-2019-already-on-fire</feedburner:origLink></entry></feed>
